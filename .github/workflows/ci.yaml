name: CI

on:
    push:
    pull_request:

jobs:
    build:
        name: Docker build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Pull images
              run: docker compose pull
            - name: Start services
              run: docker compose up --build -d
            - name: Wait for services
              run: |
                while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker compose ps -q php)")"; do
                  case $status in
                    starting) sleep 1;;
                    healthy) exit 0;;
                    unhealthy)
                      docker compose ps
                      docker compose logs
                      exit 1
                    ;;
                  esac
                done
                exit 1
            - name: Check HTTP reachability
              run: curl http://localhost
            - name: Check HTTPS reachability
              run: curl -k https://localhost
            - name: Create test database
              run: |
                docker compose exec -T php bin/console -e test doctrine:database:create --if-not-exists
                docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction
                docker compose exec -T php bin/console -e test doctrine:fixtures:load --no-interaction
            - name: Doctrine Schema Validator
              run: docker compose exec -T php bin/console doctrine:schema:validate --skip-sync
            - name: PHPUnit
              run: docker compose exec -T php env XDEBUG_MODE=coverage env MEMORY_LIMIT=-1 env XDEBUG_ENABLE=1 bin/phpunit --coverage-clover=clover.xml
            - name: Behat
              run: docker compose exec -T -e APP_ENV=test php ./vendor/bin/behat
            - name: Generate test coverage badge
              uses: timkrase/phpunit-coverage-badge@v1.2.0
              with:
                coverage_badge_path: 'badge-coverage.svg'
                push_badge: true
                repo_token: ${{ secrets.CI_ENV_TOKEN }}